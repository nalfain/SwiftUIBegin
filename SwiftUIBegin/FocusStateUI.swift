//
//  FocusStateUI.swift
//  SwiftUIBegin
//
//  Created by MP on 09.04.2024.
//

import SwiftUI

struct FocusStateUI: View {
    //–ó–∞–ø—É—Å–∫–∞—Ç—å —Å —ç–º—É–ª—è—Ç–æ—Ä–æ–º
    // –ß—Ç–æ –±—ã –ø–æ—è–≤–∏–ª–∞—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ Command-K –∏–ª–∏ go to I/O -> Keyboard -> Uncheck "Connect Hardware Keyboard"
    // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –∫—É—Ä—Å–æ—Ä –≤ –ø–æ–ª–µ –≥–¥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
    
    //–ï—Å–ª–∏ —É –Ω–∞–º —Ç–∞–∫–∏—Ö –ø–æ–æ–ª–µ–π –º–Ω–æ–≥–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å enum
    enum onbordingFields: Hashable {
        case userName
        case userPassword
    }
    //–í –º–µ—Å—Ç–æ @FocusState private var userNameInFocus: Bool –∏ @FocusState private var userPasswordInFocus: Bool –∏—Å–ø–æ–ª—å–∑—É–µ–º
    @FocusState private var fildsInFocus: onbordingFields?
    
    //@FocusState private var userNameInFocus: Bool
    @State private var userName: String = ""
    //@FocusState private var userPasswordInFocus: Bool
    @State private var userPassword: String = ""
    
    
    var body: some View {
        VStack{
            TextField("Add your name here ...", text: $userName)
                //.focused($userNameInFocus) // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                .focused($fildsInFocus, equals: .userName) //–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                .padding(.leading)
                .frame(height: 55)
                .frame(maxWidth: .infinity)
                .background(Color.gray.brightness(0.3))
                .cornerRadius(10)
            
            SecureField("Add your password here ...", text: $userPassword) //–í –æ–∫–Ω–µ –Ω–µ –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ —á—Ç–æ –º—ã –∑–∞–ø—É—Å–∫–∞–µ–º.
            // –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –∫—É—Ä—Å–æ—Ä –≤ –ø–æ–ª–µ –≥–¥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
                //.focused($userPasswordInFocus) // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                .focused($fildsInFocus, equals: .userPassword) //–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                .padding(.leading)
                .frame(height: 55)
                .frame(maxWidth: .infinity)
                .background(Color.gray.brightness(0.3))
                .cornerRadius(10)
            
            Button("Sign UP¬†üçñ" ) {
                let userNameIsValid = !userName.isEmpty
                let userPasswordIsValid = !userPassword.isEmpty
                
                if userNameIsValid && userPasswordIsValid {
                    print("Sign in....")
                }
                else if userNameIsValid {
                    fildsInFocus = .userPassword //–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                    //userNameInFocus = false // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                    //userPasswordInFocus = true // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                }
                else {
                    fildsInFocus = .userName //–∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                    //userNameInFocus = true // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                    //userPasswordInFocus = false // –ù–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–ª—è enum
                }
            }
            // –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ª–µ —Ç–æ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —Ñ–æ–∫—É—Å —Ç–æ –Ω–µ—Ç.
            //            Button("Change Focuse State" ) {
            //                userNameInFocus.toggle()
            //            }
        }
        .padding(40)
        // –ö–æ–≥–¥–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —ç—Ç–æ—Ç Vstack —á–µ—Ä–µ–∑ –∑–∞–¥–µ—Ä–∂–∫—É –≤ 0.5 —Å–µ–∫ —Ñ–æ–∫—É—Å –ø–æ–ø–∞–¥–∞–µ—Ç –ø–æ–ª–µ UserName
        //        .onAppear {
        //            DispatchQueue.main.asyncAfter(deadline: .now() + 0.5) {
        //                self.userNameInFocus = true
        //            }
    }
}

struct FocusStateUI_Previews: PreviewProvider {
    static var previews: some View {
        FocusStateUI()
    }
}
