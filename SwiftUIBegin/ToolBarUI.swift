//
//  ToolBarUI.swift
//  SwiftUIBegin
//
//  Created by MP on 13.04.2024.
//

import SwiftUI

struct ToolBarUI: View {
    
    @State private var textField: String = ""
    @State private var isSanded: Bool = false
    @State private var paths: [String] = []
    
    var body: some View {
        NavigationStack(path: $paths) {
            ZStack {
                Color.indigo.ignoresSafeArea()
                VStack {
                    ScrollView{
                        
                        Text("Hi All üòç")
                            .foregroundColor(.white)
                        
                        TextField("Send a message to the world...", text: $textField)
                            .background(Color.white).cornerRadius(5)
                            .padding(.horizontal)
                        
                        ForEach(1..<50) {  _ in
                            RoundedRectangle(cornerRadius: 10)
                                .fill(.white)
                                .frame(width: 200, height: 200)
                            
                        }
                    }
                }
            }
            //Old variant
            .navigationTitle("ToolBar")
//            .navigationBarItems(leading: Image(systemName: "heart.fill"),trailing: Image(systemName: "gear"))
            //New variant
            .toolbar {
                ToolbarItem(placement: .navigationBarLeading) {
                    Image(systemName: "heart.fill")
                }
                ToolbarItem(placement: .navigationBarTrailing) {
                        Image(systemName: "gear")
                }
//                ToolbarItem(placement: .principal) {
//                    HStack{
//                        Image(systemName: "house.fill")
//                        Image(systemName: "mail")
//                    }
//                }
                ToolbarItem(placement: .keyboard) {
                    Button {
                        isSanded.toggle()
                    } label: {
                        HStack {
                            Image(systemName: "globe")
                            Text(isSanded ? " - Sented" : " - Send")
                        }
                    }
                }
            }
            //Old .navigationBarHidden(true)
            //.toolbar(.hidden, for: .navigationBar) //–°–∫—Ä—ã–≤–∞–µ—Ç —Ç—É–ª–±–∞—Ä
            //.toolbarBackground(.hidden, for: .navigationBar) //–°–∫—Ä—ã–≤–∞–µ—Ç —Ñ–æ–Ω —Ç—É–ª–±–∞—Ä–∞ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ.
            //.toolbarColorScheme(.dark, for: .navigationBar) //–í–∫–ª—é—á–∏—Ç—å —Ç–µ–º–Ω—É—é —Å—Ö–µ–º—É –¥–ª—è –Ω–∞–≤–∏–≥–µ–π—à–µ–Ω –±–∞—Ä–∞.
            .navigationBarTitleDisplayMode(.inline) // –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ä–∞–∑—É –≤ toolbar
            .toolbarTitleMenu {
                Button {
                    paths.append("Screen 1")
                } label: {
                    Text("Screen 1")
                }
                Button {
                    paths.append("Screen 2")
                } label: {
                    Text("Screen 2")
                }
            }
            .navigationDestination(for: String.self) { value in
                Text("New screen \(value)")

//                .navigationDestination(for: String.self) { value in` - —ç—Ç–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ `NavigationView`. –û–Ω –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –∫–∞–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å, –∫–æ–≥–¥–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∑–Ω–∞—á–µ–Ω–∏—è. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –º—ã —É–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è `String`, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å —Ç–∏–ø–æ–º `String`.
//
//                { value in` - —ç—Ç–æ –∑–∞–º—ã–∫–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ `String`.
//
//                Text("New screen \(value)")` - —ç—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å —Ç–∏–ø–æ–º `String`. –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "New screen", –ø–æ—Å–ª–µ —á–µ–≥–æ —Å–ª–µ–¥—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.
//
//                –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –µ—Å–ª–∏ –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ –º–µ—Å—Ç–µ –≤–∞—à–µ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å —Ç–∏–ø–æ–º `String`, —Ç–æ —ç—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —ç—Ç–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, –∏ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ —ç—Ç–æ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏.
            }
        }
    }
}

struct ToolBarUI_Previews: PreviewProvider {
    static var previews: some View {
        ToolBarUI()
    }
}
